language: rust

matrix:
  include:
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: stable
#      if: (branch = staging OR branch = trying) OR (type = pull_request AND branch = master)

    - env: TARGET=thumbv6m-none-eabi
      rust: stable
#      if: (branch = staging OR branch = trying) OR (type = pull_request AND branch = master)

    - env: TARGET=thumbv7m-none-eabi
      rust: stable
#      if: (branch = staging OR branch = trying) OR (type = pull_request AND branch = master)

    - env: TARGET=thumbv7em-none-eabi
      rust: stable
#      if: (branch = staging OR branch = trying) OR (type = pull_request AND branch = master)

    - env: TARGET=thumbv7em-none-eabihf
      rust: stable
#      if: (branch = staging OR branch = trying) OR (type = pull_request AND branch = master)

    - env: TARGET=thumbv6m-none-eabi
      rust: nightly
#      if: (branch = staging OR branch = trying) OR (type = pull_request AND branch = master)

    - env: TARGET=thumbv7m-none-eabi
      rust: nightly
#      if: (branch = staging OR branch = trying) OR (type = pull_request AND branch = master)

    - env: TARGET=thumbv7em-none-eabi
      rust: nightly
#      if: (branch = staging OR branch = trying) OR (type = pull_request AND branch = master)

    - env: TARGET=thumbv7em-none-eabihf
      rust: nightly
#      if: (branch = staging OR branch = trying) OR (type = pull_request AND branch = master)

    - env: TARGET=thumbv8m.main-none-eabi
      rust: nightly
#      if: (branch = staging OR branch = trying) OR (type = pull_request AND branch = master)

before_install: set -e

install:
  - bash ci/install.sh
  - export PATH="$PATH:$PWD/gcc/bin"

script:
  - bash ci/script.sh

after_script: set +e

cache: cargo

before_cache:
  - chmod -R a+r $HOME/.cargo;

branches:
  only:
    - master
    - staging
    - trying

notifications:
  email:
    on_success: never
